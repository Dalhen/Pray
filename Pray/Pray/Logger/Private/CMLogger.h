//
//  CMLogger.h
//  CMLogger
//
//  Created by Jason LAPIERRE on 15/10/2012.
//  Copyright (c) 2012 Jason LAPIERRE a.k.a. The One Man Corporation. All rights reserved.
//

@interface CMLogger : NSObject

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark - printing control
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
-(void)willStartLoggerSessionWithMethod:(NSString *)methodName
                           inLineNumber:(unsigned long long int)lineNumber
                              fromClass:(NSString *)className;
-(void)willStartLoggerSessionWithMethod:(NSString *)methodName
                           inLineNumber:(unsigned long long int)lineNumber
                          usingVariable:(char *)variableName
                              fromClass:(NSString *)className;
-(void)didEndLoggingSession;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark - utility
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
-(NSString *)getValidClassName:(Class)class;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark - developer
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
-(void)logError:(NSError *)error;
-(void)logFailPt;
-(void)logFail: (NSString *)failMsg, ...;
-(void)logNote: (NSString *)noteMsg, ...;
-(void)logTodoPt;
-(void)logTodo: (NSString *)todoMsg, ...;
-(void)log: (NSString *)msg, ...;
-(void)logCallingMethod;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark - basic elements
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
-(void)logReturn;
-(void)logLine;
-(void)logDenseLine;
-(void)logLongLine;
-(void)logLongDenseLine;
-(void)logHeader: (NSString *)string, ...;
-(void)logSubHeader: (NSString *)string, ...;
-(void)logImportant: (NSString *)string, ...;
-(void)logVeryImportant: (NSString *)string, ...;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark - system info
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
-(void)logSystemLimitsForTypes;
-(void)logCurrentThreadInfo;
-(void)logThreadStackInfo;
-(void)logTime;
-(void)logAvailableFonts;
-(void)logDeviceOrientation: (UIDeviceOrientation)orientation;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark - PRINTING VARIABLES
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
-(void)logChar: (char)character;
-(void)logShortInt: (short int)number;
-(void)logUnsignedShortInt: (unsigned short int)number;
-(void)logInt: (int)number;
-(void)logUnsignedInt: (unsigned int)number;
-(void)logLongInt: (long int)number;
-(void)logUnsignedLongInt: (unsigned long int)number;
-(void)logLongLongInt: (long long int)number;
-(void)logUnsignedLongLongInt: (unsigned long long int)number;
-(void)logFloat: (float)number
 roundingResult: (BOOL) rounding;
-(void)logDouble: (double)number
  roundingResult: (BOOL) rounding;
-(void)logLongDouble: (long double)number
      roundingResult: (BOOL) rounding;
-(void)logExponentialFloat: (float)number;
-(void)logExponentialDouble: (double)number;
-(void)logExponentialLongDouble: (long double)number;
-(void)logBoolean: (BOOL)boolean;
-(void)logString: (NSString *)string, ...;
-(void)logCString: (char *)string;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark - structs
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
-(void)logRect: (CGRect)rect;
-(void)logFrame: (CGRect)frame;
-(void)logPoint: (CGPoint)point;
-(void)logSize: (CGSize)size;
-(void)logRange: (NSRange)range;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark - objects
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
-(void)logObjectPointer:(NSObject *)object;
-(void)logObjectInfo: (NSObject *)object;
-(void)logObjectInheritance: (NSObject *)object;
-(void)logObjectParent: (NSObject *)object;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark - core foundation objects
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
-(void)logCFObjectInfo: (CFTypeRef)object;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark - core data
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
-(void)logManagedObjectId: (NSManagedObject *)object;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark - object comparizon
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
-(void)logIsObject: (NSObject *)object1
          withName:(char *)object1Name
     equalToObject: (NSObject *)object2
          withName:(char *)object2Name;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark - views
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
-(void)logViewChild: (UIView *)view;
-(void)logViewParent: (UIView *)view;
-(void)logViewChildren: (UIView *)view;
-(void)logViewParents: (UIView *)view;
-(void)logViewFrame: (UIView *)view;
-(void)logViewCenter: (UIView *)view;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark - singleton methods
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
+(CMLogger *)logger;
+(id)allocWithZone: (NSZone *)zone;
-(id)copyWithZone:  (NSZone *)zone;

@end
